{"ast":null,"code":"var _jsxFileName = \"/Users/karthikpachabatla/JSprojects/src/MazeGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport characterImg from \"./character.png\";\n\n// You can keep adding more nodes for new branches, like the snake room!\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst storyNodes = {\n  start: {\n    text: \"You enter a maze. Do you want to go left or right?\",\n    options: [{\n      text: \"Left\",\n      next: \"leftBridge\",\n      move: \"left\"\n    }, {\n      text: \"Right\",\n      next: \"rightSnake\",\n      move: \"right\"\n    }]\n  },\n  leftBridge: {\n    text: \"You see a rickety bridge. Do you want to cross it?\",\n    options: [{\n      text: \"Yes\",\n      next: \"bridgeFall\",\n      move: \"center\"\n    }, {\n      text: \"No\",\n      next: \"hiddenPath\",\n      move: \"left\"\n    }]\n  },\n  bridgeFall: {\n    text: \"While you cross, the bridge snaps! You fall. Game over 💀\",\n    options: [{\n      text: \"Restart\",\n      next: \"start\",\n      move: \"start\"\n    }]\n  },\n  hiddenPath: {\n    text: \"Smart move. You find a hidden path and a shiny sword. Do you pick it up?\",\n    options: [{\n      text: \"Yes\",\n      next: \"monsterFight\",\n      move: \"left\"\n    }, {\n      text: \"No\",\n      next: \"monsterLose\",\n      move: \"left\"\n    }]\n  },\n  monsterFight: {\n    text: \"A monster appears! Do you swing your sword?\",\n    options: [{\n      text: \"Yes\",\n      next: \"win\",\n      move: \"center\"\n    }, {\n      text: \"No\",\n      next: \"lose\",\n      move: \"center\"\n    }]\n  },\n  monsterLose: {\n    text: \"A monster attacks! You have no weapon. Game over 😈\",\n    options: [{\n      text: \"Restart\",\n      next: \"start\",\n      move: \"start\"\n    }]\n  },\n  win: {\n    text: \"You slay the monster and find a treasure chest. You win! 🏆\",\n    options: [{\n      text: \"Restart\",\n      next: \"start\",\n      move: \"start\"\n    }]\n  },\n  lose: {\n    text: \"The monster attacks and you lose! Game over.\",\n    options: [{\n      text: \"Restart\",\n      next: \"start\",\n      move: \"start\"\n    }]\n  },\n  // Extended path: Right leads to a snake room!\n  rightSnake: {\n    text: \"You walk right and find a dark room filled with snakes. Do you try to run or stay still?\",\n    options: [{\n      text: \"Run\",\n      next: \"escapeSnakes\",\n      move: \"right\"\n    }, {\n      text: \"Stay Still\",\n      next: \"snakeBite\",\n      move: \"right\"\n    }]\n  },\n  escapeSnakes: {\n    text: \"You run fast and barely escape the room, but find yourself at a locked door. Do you try to break it or look for another way?\",\n    options: [{\n      text: \"Break Door\",\n      next: \"doorBreakFail\",\n      move: \"right\"\n    }, {\n      text: \"Look For Another Way\",\n      next: \"findKey\",\n      move: \"center\"\n    }]\n  },\n  snakeBite: {\n    text: \"The snakes surround you... Game over. 🐍\",\n    options: [{\n      text: \"Restart\",\n      next: \"start\",\n      move: \"start\"\n    }]\n  },\n  doorBreakFail: {\n    text: \"You try to break the door but set off a trap! Game over.\",\n    options: [{\n      text: \"Restart\",\n      next: \"start\",\n      move: \"start\"\n    }]\n  },\n  findKey: {\n    text: \"You find a hidden key, unlock the door, and escape the maze! You win! 🗝️🎉\",\n    options: [{\n      text: \"Restart\",\n      next: \"start\",\n      move: \"start\"\n    }]\n  }\n};\nexport default function MazeGame() {\n  _s();\n  const [node, setNode] = useState(\"start\");\n  const [position, setPosition] = useState(\"start\");\n\n  // Character position logic for animation\n  const getPositionClass = () => {\n    switch (position) {\n      case \"left\":\n        return \"character-left\";\n      case \"right\":\n        return \"character-right\";\n      case \"center\":\n        return \"character-center\";\n      default:\n        return \"character-start\";\n    }\n  };\n  const handleOption = opt => {\n    setNode(opt.next);\n    setPosition(opt.move || position);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Maze Adventure Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"maze-area\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: characterImg,\n        alt: \"Character\",\n        className: `character ${getPositionClass()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"story\",\n      children: storyNodes[node].text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"choices\",\n      children: storyNodes[node].options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleOption(opt),\n        children: opt.text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(MazeGame, \"Dq47i+6fIXjAqS266qd01Jg5ADs=\");\n_c = MazeGame;\nvar _c;\n$RefreshReg$(_c, \"MazeGame\");","map":{"version":3,"names":["React","useState","characterImg","jsxDEV","_jsxDEV","storyNodes","start","text","options","next","move","leftBridge","bridgeFall","hiddenPath","monsterFight","monsterLose","win","lose","rightSnake","escapeSnakes","snakeBite","doorBreakFail","findKey","MazeGame","_s","node","setNode","position","setPosition","getPositionClass","handleOption","opt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","map","idx","onClick","_c","$RefreshReg$"],"sources":["/Users/karthikpachabatla/JSprojects/src/MazeGame.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport characterImg from \"./character.png\";\n\n// You can keep adding more nodes for new branches, like the snake room!\nconst storyNodes = {\n  start: {\n    text: \"You enter a maze. Do you want to go left or right?\",\n    options: [\n      { text: \"Left\", next: \"leftBridge\", move: \"left\" },\n      { text: \"Right\", next: \"rightSnake\", move: \"right\" },\n    ],\n  },\n  leftBridge: {\n    text: \"You see a rickety bridge. Do you want to cross it?\",\n    options: [\n      { text: \"Yes\", next: \"bridgeFall\", move: \"center\" },\n      { text: \"No\", next: \"hiddenPath\", move: \"left\" },\n    ],\n  },\n  bridgeFall: {\n    text: \"While you cross, the bridge snaps! You fall. Game over 💀\",\n    options: [{ text: \"Restart\", next: \"start\", move: \"start\" }],\n  },\n  hiddenPath: {\n    text: \"Smart move. You find a hidden path and a shiny sword. Do you pick it up?\",\n    options: [\n      { text: \"Yes\", next: \"monsterFight\", move: \"left\" },\n      { text: \"No\", next: \"monsterLose\", move: \"left\" },\n    ],\n  },\n  monsterFight: {\n    text: \"A monster appears! Do you swing your sword?\",\n    options: [\n      { text: \"Yes\", next: \"win\", move: \"center\" },\n      { text: \"No\", next: \"lose\", move: \"center\" },\n    ],\n  },\n  monsterLose: {\n    text: \"A monster attacks! You have no weapon. Game over 😈\",\n    options: [{ text: \"Restart\", next: \"start\", move: \"start\" }],\n  },\n  win: {\n    text: \"You slay the monster and find a treasure chest. You win! 🏆\",\n    options: [{ text: \"Restart\", next: \"start\", move: \"start\" }],\n  },\n  lose: {\n    text: \"The monster attacks and you lose! Game over.\",\n    options: [{ text: \"Restart\", next: \"start\", move: \"start\" }],\n  },\n  // Extended path: Right leads to a snake room!\n  rightSnake: {\n    text: \"You walk right and find a dark room filled with snakes. Do you try to run or stay still?\",\n    options: [\n      { text: \"Run\", next: \"escapeSnakes\", move: \"right\" },\n      { text: \"Stay Still\", next: \"snakeBite\", move: \"right\" },\n    ],\n  },\n  escapeSnakes: {\n    text: \"You run fast and barely escape the room, but find yourself at a locked door. Do you try to break it or look for another way?\",\n    options: [\n      { text: \"Break Door\", next: \"doorBreakFail\", move: \"right\" },\n      { text: \"Look For Another Way\", next: \"findKey\", move: \"center\" },\n    ],\n  },\n  snakeBite: {\n    text: \"The snakes surround you... Game over. 🐍\",\n    options: [{ text: \"Restart\", next: \"start\", move: \"start\" }],\n  },\n  doorBreakFail: {\n    text: \"You try to break the door but set off a trap! Game over.\",\n    options: [{ text: \"Restart\", next: \"start\", move: \"start\" }],\n  },\n  findKey: {\n    text: \"You find a hidden key, unlock the door, and escape the maze! You win! 🗝️🎉\",\n    options: [{ text: \"Restart\", next: \"start\", move: \"start\" }],\n  },\n};\n\nexport default function MazeGame() {\n  const [node, setNode] = useState(\"start\");\n  const [position, setPosition] = useState(\"start\");\n\n  // Character position logic for animation\n  const getPositionClass = () => {\n    switch (position) {\n      case \"left\":\n        return \"character-left\";\n      case \"right\":\n        return \"character-right\";\n      case \"center\":\n        return \"character-center\";\n      default:\n        return \"character-start\";\n    }\n  };\n\n  const handleOption = (opt) => {\n    setNode(opt.next);\n    setPosition(opt.move || position);\n  };\n\n  return (\n    <div className=\"game-container\">\n      <h1>Maze Adventure Game</h1>\n      <div className=\"maze-area\">\n        <img src={characterImg} alt=\"Character\" className={`character ${getPositionClass()}`} />\n      </div>\n      <p className=\"story\">{storyNodes[node].text}</p>\n      <div className=\"choices\">\n        {storyNodes[node].options.map((opt, idx) => (\n          <button key={idx} onClick={() => handleOption(opt)}>\n            {opt.text}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}